---
resource_types:
  - name: github-status
    type: docker-image
    source:
      repository: registry.barth.tech/library/concourse_github_status
      tag: latest

  - name: helm-chart
    type: registry-image
    source:
      repository: jghiloni/helm-chart-resource
      tag: v0.1.1


resources:

  - name: git-repo
    icon: github
    type: git
    source:
      uri: git@github.com:r-bar/helm-charts.git
      branch: master
      private_key: ((git-config.ssh-private-key))
    webhook_token: ((webhook-token))
    check_every: 24h

  - name: bitwarden-chart
    icon: ship-wheel
    type: helm-chart
    source:
      chart: bitwarden
      repository_url: https://registry.barth.tech/chartrepo/library
      username: ((registry.username))
      password: ((registry.password))

  - name: bitwarden-release
    icon: github
    type: github-release
    source:
      owner: dani-garcia
      repository: bitwarden_rs
      access_token: ((github-access-token))

  - name: mumble-chart
    icon: ship-wheel
    type: helm-chart
    source:
      chart: mumble
      repository_url: https://registry.barth.tech/chartrepo/library
      username: ((registry.username))
      password: ((registry.password))

  - name: mumble-release
    icon: github
    type: github-release
    source:
      owner: mumble-voip
      repository: mumble
      access_token: ((github-access-token))

  - name: build-status
    type: github-status
    icon: list-status
    source:
      owner: r-bar
      repository: helm-charts
      access_token: ((github-access-token))


#groups:
#  - name: setup
#    jobs: [update-pipeline]
#  - name: bitwarden
#    jobs: [bitwarden, bitwarden-release]
#  - name: mumble
#    jobs: [mumble]


jobs:
  - name: update-pipeline
    plan:
      - get: git-repo
        trigger: true

      - set_pipeline: self
        file: git-repo/ci/pipeline.yaml

  - name: bitwarden
    plan:
      - get: git-repo
        passed: [update-pipeline]
        trigger: true

      - put: build-status
        params:
          state: pending
          commit: git-repo
      - do:
          - task: test-bitwarden
            file: git-repo/ci/helm-test-task.yaml
            input_mapping: {repository: git-repo}
            vars:
              chart-path: bitwarden
              namespace: ((k8s-cluster.namespace))
              token: ((k8s-cluster.token))
              certificate-authority-data: ((k8s-cluster.certificate-authority-data))
              cluster-url: ((k8s-cluster.url))
          - put: bitwarden-chart
            params:
              repository: git-repo/bitwarden
        on_failure: &on_failure
          put: build-status
          params:
            state: failure
            commit: git-repo
        on_error: *on_failure
        on_abort: *on_failure
      - put: build-status
        params:
          state: success
          commit: git-repo

  - name: bitwarden-release
    plan:
      - get: bitwarden-release
        trigger: true
      - get: git-repo
      - task: bump-version
        file: git-repo/ci/set-chart-version.yaml
        input_mapping:
          repository: git-repo
          release: bitwarden-release
        output_mapping: {repository: git-repo}
        vars:
          chart-path: bitwarden
          version: release/version
          git-username: ((git-config.username))
          git-email: ((git-config.email))
      - put: git-repo
        params:
          repository: git-repo
          tag: git-repo/ci/tag

  - name: mumble
    plan:
      - get: git-repo
        passed: [update-pipeline]
        trigger: true
      - put: build-status
        params:
          state: pending
          commit: git-repo
      - do:
          - task: test-mumble
            file: git-repo/ci/helm-test-task.yaml
            input_mapping: {repository: git-repo}
            vars:
              chart-path: mumble
              namespace: ((k8s-cluster.namespace))
              token: ((k8s-cluster.token))
              certificate-authority-data: ((k8s-cluster.certificate-authority-data))
              cluster-url: ((k8s-cluster.url))
          - put: mumble-chart
            params:
              repository: git-repo/mumble
        on_failure: *on_failure
        on_error: *on_failure
        on_abort: *on_failure
      - put: build-status
        params:
          state: success
          commit: git-repo

  - name: mumble-release
    plan:
      - get: mumble-release
        trigger: true
      - get: git-repo
      - task: bump-version
        file: git-repo/ci/set-chart-version.yaml
        input_mapping:
          repository: git-repo
          release: mumble-release
        output_mapping: {repository: git-repo}
        vars:
          chart-path: mumble
          version: release/version
          git-username: ((git-config.username))
          git-email: ((git-config.email))
      - put: git-repo
        params:
          repository: git-repo
          tag: git-repo/ci/tag

